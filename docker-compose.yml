version: "3.8"

services:
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: always

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: always

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    restart: always

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: query-service-api
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
      - redis
      - elasticsearch
      - kafka
    environment:
      MONGO_URI: mongodb://mongodb:27017
      REDIS_URI: redis://redis:6379
      ELASTICSEARCH_URI: http://elasticsearch:9200
      KAFKA_BROKER: kafka:9092
    volumes:
      - .:/app
    restart: always

volumes:
  mongodb_data:
